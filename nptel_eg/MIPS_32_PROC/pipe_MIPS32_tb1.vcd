$date
	Tue Dec 01 11:09:00 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module pipe_MIPS32_tb $end
$var reg 1 ! clk1 $end
$var reg 1 " clk2 $end
$var integer 32 # k [31:0] $end
$scope module mips $end
$var wire 1 ! clk1 $end
$var wire 1 " clk2 $end
$var reg 32 $ EX_MEM_ALUOut [31:0] $end
$var reg 32 % EX_MEM_B [31:0] $end
$var reg 32 & EX_MEM_IR [31:0] $end
$var reg 1 ' EX_MEM_cond $end
$var reg 3 ( EX_MEM_type [2:0] $end
$var reg 1 ) HALTED $end
$var reg 32 * ID_EX_A [31:0] $end
$var reg 32 + ID_EX_B [31:0] $end
$var reg 32 , ID_EX_IR [31:0] $end
$var reg 32 - ID_EX_Imm [31:0] $end
$var reg 32 . ID_EX_NPC [31:0] $end
$var reg 3 / ID_EX_type [2:0] $end
$var reg 32 0 IF_ID_IR [31:0] $end
$var reg 32 1 IF_ID_NPC [31:0] $end
$var reg 32 2 MEM_WB_ALUOut [31:0] $end
$var reg 32 3 MEM_WB_IR [31:0] $end
$var reg 32 4 MEM_WB_LMD [31:0] $end
$var reg 3 5 MEM_WB_type [2:0] $end
$var reg 32 6 PC [31:0] $end
$var reg 1 7 TAKEN_BRANCH $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
07
b0 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
0)
bx (
x'
bx &
bx %
bx $
b0 #
0"
0!
$end
#5000
b1 6
b1 1
b101000000000010000000000001010 0
1!
#10000
0!
#15000
b1 /
b1010 -
b101000000000010000000000001010 ,
b1 .
b0 *
1"
#20000
0"
#25000
b1010 $
b101000000000010000000000001010 &
b1 (
b10 6
b10 1
b101000000000100000000000010100 0
1!
#30000
0!
#35000
b1010 2
b101000000000010000000000001010 3
b1 5
b10100 -
b101000000000100000000000010100 ,
b10 .
1"
#40000
0"
#45000
b11 6
b11 1
b101000000000110000000000011001 0
b10100 $
b101000000000100000000000010100 &
1!
#50000
0!
#55000
b11001 -
b101000000000110000000000011001 ,
b11 .
b10100 2
b101000000000100000000000010100 3
1"
#60000
0"
#65000
b11001 $
b101000000000110000000000011001 &
b100 6
b100 1
b1100111001110111100000000000 0
1!
#70000
0!
#75000
b11001 2
b101000000000110000000000011001 3
b0 /
b111100000000000 -
b1100111001110111100000000000 ,
b100 .
bx *
1"
#80000
0"
#85000
b101 6
b101 1
b1100001101110111100000000000 0
bx $
b1100111001110111100000000000 &
b0 (
1!
#90000
0!
#95000
b1100001101110111100000000000 ,
b101 .
b1010 *
bx 2
b1100111001110111100000000000 3
b0 5
1"
#100000
0"
#105000
bx1x1x $
b1100001101110111100000000000 &
b110 6
b110 1
b1000100010000000000000 0
1!
#110000
0!
#115000
bx1x1x 2
b1100001101110111100000000000 3
b10000000000000 -
b1000100010000000000000 ,
b110 .
b10100 +
1"
#120000
0"
#125000
b111 6
b111 1
b1100111001110111100000000000 0
b11110 $
b1000100010000000000000 &
1!
#130000
0!
#135000
b111100000000000 -
b1100111001110111100000000000 ,
b111 .
bx +
bx *
b11110 2
b1000100010000000000000 3
1"
#140000
0"
#145000
bx $
b1100111001110111100000000000 &
b1000 6
b1000 1
b100000110010100000000000 0
1!
#150000
0!
#155000
bx 2
b1100111001110111100000000000 3
b10100000000000 -
b100000110010100000000000 ,
b1000 .
b11001 +
b11110 *
1"
#160000
0"
#165000
b1001 6
b1001 1
b11111100000000000000000000000000 0
b110111 $
b100000110010100000000000 &
1!
#170000
0!
#175000
b101 /
b0 -
b11111100000000000000000000000000 ,
b1001 .
b0 +
b0 *
b110111 2
b100000110010100000000000 3
1"
#180000
0"
#185000
b11111100000000000000000000000000 &
b101 (
b1010 6
b1010 1
bx 0
1!
#190000
0!
#195000
b11111100000000000000000000000000 3
b101 5
bx -
bx ,
b1010 .
bx +
bx *
1"
#200000
0"
#205000
b1011 6
b1011 1
bx &
1)
1!
#210000
0!
#215000
b1011 .
1"
#220000
0"
#225000
1!
#230000
0!
#235000
1"
#240000
0"
#245000
1!
#250000
0!
#255000
1"
#260000
0"
#265000
1!
#270000
0!
#275000
1"
#280000
0"
b0 6
0)
b111 #
#285000
b1 6
b1 1
b101000000000010000000000001010 0
1)
1!
#290000
0!
#295000
b1 /
b1010 -
b101000000000010000000000001010 ,
b1 .
b1010 +
1"
#300000
0"
